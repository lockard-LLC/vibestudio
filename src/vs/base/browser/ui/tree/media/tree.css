/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

.monaco-tl-row {
	display: flex;
	height: 100%;
	align-items: center;
	position: relative;
}

.monaco-tl-row.disabled {
	cursor: default;
}
.monaco-tl-indent {
	height: 100%;
	position: absolute;
	top: var(--vscode-static-spacing-none);
	left: var(--vscode-tree-indent-horizontal-spacing);
	pointer-events: none;
}

.hide-arrows .monaco-tl-indent {
	left: var(--vscode-tree-indent-noarrows-horizontal-spacing);
}

.monaco-tl-indent > .indent-guide {
	display: inline-block;
	box-sizing: border-box;
	height: 100%;
	border-left: var(--vscode-tree-line-width) solid transparent;
	opacity: 0;
}

.monaco-workbench:not(.reduce-motion) .monaco-tl-indent > .indent-guide {
	transition: opacity 0.1s linear;
}

.monaco-tl-twistie,
.monaco-tl-contents {
	height: 100%;
}

.monaco-tl-twistie {
	font-size: var(--vscode-tree-twistie-font-size);
	text-align: right;
	padding-right: var(--vscode-tree-twistie-horizontal-spacing);
	flex-shrink: 0;
	width: var(--vscode-tree-twistie-width);
	display: flex !important;
	align-items: center;
	justify-content: center;
	transform: translateX(var(--vscode-tree-twistie-horizontal-spacing-nudge));
}

.monaco-tl-contents {
	flex: 1;
	overflow: hidden;
}

.monaco-tl-twistie::before {
	border-radius: var(--vscode-tree-twistie-corner-radius);
}

.monaco-tl-twistie.collapsed::before {
	transform: rotate(-90deg);
}

.monaco-tl-twistie.codicon-tree-item-loading::before {
	/* Use steps to throttle FPS to reduce CPU usage */
	animation: codicon-spin 1.25s steps(30) infinite;
}

.monaco-tree-type-filter {
	position: absolute;
	top: var(--vscode-static-spacing-none);
	right: var(--vscode-static-spacing-none);
	display: flex;
	padding: var(--vscode-tree-filter-spacing-xs);
	max-width: var(--vscode-tree-filter-max-width);
	z-index: 100;
	margin: var(--vscode-static-spacing-none) var(--vscode-tree-filter-spacing-m) var(--vscode-static-spacing-none) var(--vscode-tree-filter-spacing-s);
	border: var(--vscode-tree-line-width) solid var(--vscode-widget-border);
	border-bottom-left-radius: var(--vscode-tree-filter-corner-radius);
	border-bottom-right-radius: var(--vscode-tree-filter-corner-radius);
}

.monaco-workbench:not(.reduce-motion) .monaco-tree-type-filter {
	transition: top 0.3s;
}

.monaco-tree-type-filter.disabled {
	top: calc(var(--vscode-tree-filter-disabled-vertical-spacing-nudge) * -1) !important;
}

.monaco-tree-type-filter-input {
	flex: 1;
}

.monaco-tree-type-filter-input .monaco-inputbox {
	height: calc(var(--vscode-base-default-control-size) + 1);
}

.monaco-tree-type-filter-input .monaco-inputbox > .ibwrapper > .input,
.monaco-tree-type-filter-input .monaco-inputbox > .ibwrapper > .mirror {
	padding: var(--vscode-tree-filter-spacing-xxs) var(--vscode-tree-filter-spacing-xs);
}

.monaco-tree-type-filter-input .monaco-findInput > .controls {
	top: var(--vscode-tree-filter-spacing-xxs);
}

.monaco-tree-type-filter-actionbar {
	margin-left: var(--vscode-tree-filter-spacing-xs);
}

.monaco-tree-type-filter-actionbar .monaco-action-bar .action-label {
	padding: var(--vscode-tree-filter-spacing-xxs);
}

.monaco-list .monaco-scrollable-element .monaco-tree-sticky-container{
	position: absolute;
	top: var(--vscode-static-spacing-none);
	left: var(--vscode-static-spacing-none);
	width: 100%;
	height: var(--vscode-static-spacing-none);
	z-index: 13; /* Settings editor uses z-index: 12 */

	/* Backup color in case the tree does not provide the background color */
	background-color: var(--vscode-sideBar-background);
}

.monaco-list .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-row.monaco-list-row{
	position: absolute;
	width: 100%;
	opacity: 1 !important; /* Settings editor uses opacity < 1 */
	overflow: hidden;

	/* Backup color in case the tree does not provide the background color */
	background-color: var(--vscode-sideBar-background);
}

.monaco-list .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-row:hover{
	background-color: var(--vscode-list-hoverBackground) !important;
	cursor: pointer;
}

.monaco-list .monaco-scrollable-element .monaco-tree-sticky-container.empty,
.monaco-list .monaco-scrollable-element .monaco-tree-sticky-container.empty .monaco-tree-sticky-container-shadow {
	display: none;
}

.monaco-list .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-container-shadow {
	position: absolute;
	bottom: calc(var(--vscode-scrollableelement-shadow-spacing) * -1);
	left: var(--vscode-static-spacing-none);
	height: var(--vscode-static-spacing-none); /* heigt is 3px and only set when there is a treeStickyScrollShadow color */
	width: 100%;
}

.monaco-list .monaco-scrollable-element .monaco-tree-sticky-container[tabindex="0"]:focus{
	outline: none;
}
