{
  "name": "waveform-surfer-v2",
  "displayName": "Waveform Surfer",
  "description": "Advanced waveform viewer integrated with Surfer, for viewing VCD, FST, GHW, and FSDB files",
  "version": "0.0.1",
  "publisher": "voltai",
  "repository": {
    "type": "git",
    "url": "https://github.com/voltai-inc/VoltaiCode"
  },
  "icon": "media/icon.png",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other",
    "Visualization"
  ],
  "keywords": [
    "waveform",
    "vcd",
    "fst",
    "ghw",
    "fsdb",
    "digital",
    "simulation",
    "eda"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "customEditors": [
      {
        "viewType": "waveformSurfer.waveformViewer",
        "displayName": "Waveform Surfer",
        "selector": [
          {
            "filenamePattern": "*.vcd"
          },
          {
            "filenamePattern": "*.fst"
          },
          {
            "filenamePattern": "*.ghw"
          },
          {
            "filenamePattern": "*.fsdb"
          }
        ],
        "priority": "default"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "waveformSurferActivityBar",
          "title": "Waveform Surfer",
          "icon": "media/activity-bar.svg"
        }
      ]
    },
    "views": {
      "waveformSurferActivityBar": [
        {
          "id": "waveformSurferNetlistView",
          "name": "Signal Hierarchy",
          "when": "waveformSurfer:hasActiveDocument"
        },
        {
          "id": "waveformSurferDisplayedSignalsView",
          "name": "Displayed Signals",
          "when": "waveformSurfer:hasActiveDocument"
        }
      ]
    },
    "commands": [
      {
        "command": "waveformSurfer.addSignal",
        "title": "Add Signal",
        "icon": "$(add)"
      },
      {
        "command": "waveformSurfer.removeSignal",
        "title": "Remove Signal",
        "icon": "$(remove)"
      },
      {
        "command": "waveformSurfer.zoomFit",
        "title": "Zoom to Fit",
        "icon": "$(zoom-to-fit-width)"
      },
      {
        "command": "waveformSurfer.exportImage",
        "title": "Export as Image",
        "icon": "$(export)"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "waveformSurfer.addSignal",
          "when": "view == waveformSurferNetlistView",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "Waveform Surfer",
      "properties": {
        "waveformSurfer.theme": {
          "type": "string",
          "enum": ["dark", "light", "auto"],
          "default": "auto",
          "description": "Theme for the waveform viewer"
        },
        "waveformSurfer.maxFileSize": {
          "type": "number",
          "default": 100,
          "description": "Maximum file size to load in MB"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "generate:bindings": "wit2ts --outDir ./src/generated ./wit",
    "build:wasm": "cargo build --target wasm32-unknown-unknown --release",
    "build:wasm:opt": "npm run build:wasm && wasm-opt -Oz target/wasm32-unknown-unknown/release/surfer_parser.wasm -o dist/surfer_parser.wasm",
    "download:surfer": "node scripts/download-surfer.js",
    "compile": "npm run generate:bindings && npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "watch:wasm": "cargo watch -x 'build --target wasm32-unknown-unknown --release'",
    "package": "npm run build:wasm:opt && npm run download:surfer && npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "install:rust-deps": "rustup target add wasm32-unknown-unknown"
  },
  "devDependencies": {
    "@types/vscode": "^1.85.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "esbuild": "^0.25.3",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "@vscode/codicons": "0.0.35",
    "@vscode/wasm-component-model": "^1.0.2",
    "node-addon-api": "^8.3.1"
  },
  "optionalDependencies": {
    "@bytecodealliance/wit2ts": "^1.0.2",
    "wasm-opt": "^1.3.0"
  }
}
