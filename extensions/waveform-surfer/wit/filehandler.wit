// wit/filehandler.wit
package vscode:example;

interface types {

  record scopeitem {
    name: string,
    id: string,
    tpe: string
  }
}

world filehandler {
	//use types.{ operation };
	use types.{scopeitem };

	import log: func(msg: string);
  import outputlog: func(msg: string);
	import fsread: func(fd: u32, offset: u64, length: u32) -> list<u8>;
	import getsize: func(fd: u32) -> u64;
	import setscopetop: func(name: string, id: u32, tpe: string);
  import setvartop: func(name: string, id: u32, signalid: u32, tpe: string, encoding: string, width: u32, msb: s32, lsb: s32);
  import setmetadata: func (scopecount: u32, varcount: u32, timescale: u32, timeunit: string);
  import setchunksize: func(chunksize: u64, timeend: u64, timetablelength: u64);
	import sendtransitiondatachunk: func(signalid: u32, totalchunks: u32, chunknum: u32, min: f64, max: f64, data: string);

	export loadfile: func(size: u64, fd: u32, loadstatic: bool, buffersize: u32);
  export readbody: func();
  export unload: func();

  // wit2ts seems to have issues returning lists of custom types
  // so we will convert to JSON string
  export getchildren: func(id: u32, startindex: u32) -> string;
  export getsignaldata: func(signalidlist: list<u32>);
  export getvaluesattime: func(time: u64, paths: string) -> string;
}